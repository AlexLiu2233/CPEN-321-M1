name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest 
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Copy files to EC2
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "./backend/"
          target: "/home/ubuntu/cpen-321-m1-backend"

      - name: Rebuild and Redeploy
  uses: appleboy/ssh-action@v1
  with:
    debug: true
    host: ${{ secrets.EC2_HOST }}
    username: ${{ secrets.EC2_USER }}
    key: ${{ secrets.EC2_KEY }}
    script: |
      set -euxo pipefail
      cd /home/ubuntu/cpen-321-m1-backend/backend

      # Write .env with NO indentation and no quoting of numbers
      cat > .env <<'EOF'
PORT=${{ secrets.PORT }}
DB_URI=${{ secrets.DB_URI }}
JWT_SECRET=${{ secrets.JWT_SECRET }}
GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
EOF

      echo "---- .env (showing invisibles) ----"
      sed -n 'l' .env

      echo "---- Compose version/context ----"
      docker compose version
      docker context show || true

      echo "---- Compose config (after interpolation) ----"
      docker compose --env-file .env config

      # If the above succeeded, proceed
      docker compose --env-file .env down || true
      docker compose --env-file .env up -d --build

